--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 23.1 cbx_cycloneii 2023:11:29:19:36:39:SC cbx_lpm_add_sub 2023:11:29:19:36:39:SC cbx_lpm_compare 2023:11:29:19:36:39:SC cbx_lpm_decode 2023:11:29:19:36:39:SC cbx_mgl 2023:11:29:19:36:47:SC cbx_nadder 2023:11:29:19:36:39:SC cbx_stratix 2023:11:29:19:36:39:SC cbx_stratixii 2023:11:29:19:36:39:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1847w[1..0]	: WIRE;
	w_anode1856w[3..0]	: WIRE;
	w_anode1873w[3..0]	: WIRE;
	w_anode1883w[3..0]	: WIRE;
	w_anode1893w[3..0]	: WIRE;
	w_anode1903w[3..0]	: WIRE;
	w_anode1913w[3..0]	: WIRE;
	w_anode1923w[3..0]	: WIRE;
	w_anode1933w[3..0]	: WIRE;
	w_anode1945w[1..0]	: WIRE;
	w_anode1952w[3..0]	: WIRE;
	w_anode1963w[3..0]	: WIRE;
	w_anode1973w[3..0]	: WIRE;
	w_anode1983w[3..0]	: WIRE;
	w_anode1993w[3..0]	: WIRE;
	w_anode2003w[3..0]	: WIRE;
	w_anode2013w[3..0]	: WIRE;
	w_anode2023w[3..0]	: WIRE;
	w_data1845w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode2023w[3..3], w_anode2013w[3..3], w_anode2003w[3..3], w_anode1993w[3..3], w_anode1983w[3..3], w_anode1973w[3..3], w_anode1963w[3..3], w_anode1952w[3..3]), ( w_anode1933w[3..3], w_anode1923w[3..3], w_anode1913w[3..3], w_anode1903w[3..3], w_anode1893w[3..3], w_anode1883w[3..3], w_anode1873w[3..3], w_anode1856w[3..3]));
	w_anode1847w[] = ( (w_anode1847w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1856w[] = ( (w_anode1856w[2..2] & (! w_data1845w[2..2])), (w_anode1856w[1..1] & (! w_data1845w[1..1])), (w_anode1856w[0..0] & (! w_data1845w[0..0])), w_anode1847w[1..1]);
	w_anode1873w[] = ( (w_anode1873w[2..2] & (! w_data1845w[2..2])), (w_anode1873w[1..1] & (! w_data1845w[1..1])), (w_anode1873w[0..0] & w_data1845w[0..0]), w_anode1847w[1..1]);
	w_anode1883w[] = ( (w_anode1883w[2..2] & (! w_data1845w[2..2])), (w_anode1883w[1..1] & w_data1845w[1..1]), (w_anode1883w[0..0] & (! w_data1845w[0..0])), w_anode1847w[1..1]);
	w_anode1893w[] = ( (w_anode1893w[2..2] & (! w_data1845w[2..2])), (w_anode1893w[1..1] & w_data1845w[1..1]), (w_anode1893w[0..0] & w_data1845w[0..0]), w_anode1847w[1..1]);
	w_anode1903w[] = ( (w_anode1903w[2..2] & w_data1845w[2..2]), (w_anode1903w[1..1] & (! w_data1845w[1..1])), (w_anode1903w[0..0] & (! w_data1845w[0..0])), w_anode1847w[1..1]);
	w_anode1913w[] = ( (w_anode1913w[2..2] & w_data1845w[2..2]), (w_anode1913w[1..1] & (! w_data1845w[1..1])), (w_anode1913w[0..0] & w_data1845w[0..0]), w_anode1847w[1..1]);
	w_anode1923w[] = ( (w_anode1923w[2..2] & w_data1845w[2..2]), (w_anode1923w[1..1] & w_data1845w[1..1]), (w_anode1923w[0..0] & (! w_data1845w[0..0])), w_anode1847w[1..1]);
	w_anode1933w[] = ( (w_anode1933w[2..2] & w_data1845w[2..2]), (w_anode1933w[1..1] & w_data1845w[1..1]), (w_anode1933w[0..0] & w_data1845w[0..0]), w_anode1847w[1..1]);
	w_anode1945w[] = ( (w_anode1945w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1952w[] = ( (w_anode1952w[2..2] & (! w_data1845w[2..2])), (w_anode1952w[1..1] & (! w_data1845w[1..1])), (w_anode1952w[0..0] & (! w_data1845w[0..0])), w_anode1945w[1..1]);
	w_anode1963w[] = ( (w_anode1963w[2..2] & (! w_data1845w[2..2])), (w_anode1963w[1..1] & (! w_data1845w[1..1])), (w_anode1963w[0..0] & w_data1845w[0..0]), w_anode1945w[1..1]);
	w_anode1973w[] = ( (w_anode1973w[2..2] & (! w_data1845w[2..2])), (w_anode1973w[1..1] & w_data1845w[1..1]), (w_anode1973w[0..0] & (! w_data1845w[0..0])), w_anode1945w[1..1]);
	w_anode1983w[] = ( (w_anode1983w[2..2] & (! w_data1845w[2..2])), (w_anode1983w[1..1] & w_data1845w[1..1]), (w_anode1983w[0..0] & w_data1845w[0..0]), w_anode1945w[1..1]);
	w_anode1993w[] = ( (w_anode1993w[2..2] & w_data1845w[2..2]), (w_anode1993w[1..1] & (! w_data1845w[1..1])), (w_anode1993w[0..0] & (! w_data1845w[0..0])), w_anode1945w[1..1]);
	w_anode2003w[] = ( (w_anode2003w[2..2] & w_data1845w[2..2]), (w_anode2003w[1..1] & (! w_data1845w[1..1])), (w_anode2003w[0..0] & w_data1845w[0..0]), w_anode1945w[1..1]);
	w_anode2013w[] = ( (w_anode2013w[2..2] & w_data1845w[2..2]), (w_anode2013w[1..1] & w_data1845w[1..1]), (w_anode2013w[0..0] & (! w_data1845w[0..0])), w_anode1945w[1..1]);
	w_anode2023w[] = ( (w_anode2023w[2..2] & w_data1845w[2..2]), (w_anode2023w[1..1] & w_data1845w[1..1]), (w_anode2023w[0..0] & w_data1845w[0..0]), w_anode1945w[1..1]);
	w_data1845w[2..0] = data_wire[2..0];
END;
--VALID FILE
